<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Continuous Deployment on The Fewbytes legacy</title><link>https://www.fewbytes.com/tags/continuous-deployment/</link><description>Recent content in Continuous Deployment on The Fewbytes legacy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Apr 2013 15:45:50 +0300</lastBuildDate><atom:link href="https://www.fewbytes.com/tags/continuous-deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>How to prevent Continuous Deployment from turning into a Continuous Disaster</title><link>https://www.fewbytes.com/how-to-prevent-continuous-deployment-from-turning-into-a-continuous-disaster/</link><pubDate>Sat, 13 Apr 2013 15:45:50 +0300</pubDate><guid>https://www.fewbytes.com/how-to-prevent-continuous-deployment-from-turning-into-a-continuous-disaster/</guid><description>These days, one the of most frequent request we hear from clients is setting up continuous deployment. Every company wants it, every DevOps related conference has sessions about it. However, newcomers tend to miss one of the key points of CI/CD – it really isn’t an automation problem, it’s a cultural problem. From a pure technical perspective implementing a build-deploy pipeline is fairly simple with current tools and this has been the case for several years.</description></item></channel></rss>